#version 430

layout(local_size_x = 256) in;

layout(std430, binding = 0) buffer ParticleIn {
    vec4 particlesIn[];
};

layout(std430, binding = 1) buffer ParticleOut {
    vec4 particlesOut[];
};

uniform vec2 mousePosition;
uniform float deltaTime;
uniform vec2 iResolution;

void main() {
    uint gid = gl_GlobalInvocationID.x;
    if(gid >= particlesIn.length()) return;

    vec2 pos = particlesIn[gid].xy;
    vec2 vel = particlesIn[gid].zw;

    // Update velocity (attract to mouse)
    vec2 toMouse = mousePosition - pos;
    vel += normalize(toMouse) * deltaTime * 100.0; // Increased attraction strength

    // Update position
    pos += vel * deltaTime;

    // Bounce off edges
    if(pos.x < 0 || pos.x > iResolution.x) {
        pos.x = clamp(pos.x, 0, iResolution.x);
        vel.x *= -0.9;
    }
    if(pos.y < 0 || pos.y > iResolution.y) {
        pos.y = clamp(pos.y, 0, iResolution.y);
        vel.y *= -0.9;
    }

    particlesOut[gid] = vec4(pos, vel);
}