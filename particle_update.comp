#version 430 core

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer ParticleBuffer {
    vec4 particles[];
};

uniform vec2 mousePosition;
uniform float deltaTime;

void main() {
    uint gid = gl_GlobalInvocationID.x;
    
    vec2 position = particles[gid].xy;
    vec2 velocity = particles[gid].zw;
    
    // Simple attraction to mouse
    vec2 direction = mousePosition - position;
    float distance = length(direction);
    vec2 acceleration = normalize(direction) * min(5.0 / (distance * distance + 0.1), 10.0); // Adjust attraction strength
    
    velocity += acceleration * deltaTime;
    velocity *= 0.99; // Add some damping
    position += velocity * deltaTime;
    
    // Bounce off screen edges
    if (abs(position.x) > 1.0) {
        position.x = sign(position.x) * 1.0;
        velocity.x *= -0.8;
    }
    if (abs(position.y) > 1.0) {
        position.y = sign(position.y) * 1.0;
        velocity.y *= -0.8;
    }
    
    // Update particle data
    particles[gid] = vec4(position, velocity);
}